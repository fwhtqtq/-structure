#include <stdio.h>
int interpolationSearch(int arr[], int n, int key) {
    int low = 0, high = n - 1;
    while (low <= high && key >= arr[low] && key <= arr[high]) {
        if (low == high) {
            if (arr[low] == key) {
                return low;
            }
            return -1;
        }
        int pos = low + (((double)(high - low) / (arr[high] - arr[low])) * (key - arr[low]));
        if (arr[pos] == key) {
            return pos;
        }
        if (arr[pos] < key) {
            low = pos + 1;
        } else {
            high = pos - 1;
        }
    }
    return -1;
}
// int main() {
    // int arr[] = {2, 5, 8, 10, 13, 21};       // 示例有序数组
    // int n = sizeof(arr) / sizeof(arr[0]);    // 计算数组长度
    // int key = 10;                            // 要查找的目标元素
    // int index = interpolationSearch(arr, n, key); // 调用插值搜索函数进行查找
    // if (index != -1) {
        // printf("元素 %d 在数组中的位置是 %d\n", key, index); // 找到了目标元素，输出其位置
    // } else {
        // printf("数组中找不到元素 %d\n", key);               // 未找到目标元素的情况
    // }
    // return 0;
// }
